const baseUrl = 'http://localhost:3030/jsonstore/records';
const baseListRecord = document.querySelector('#list .record:nth-child(1)')

const loadBtn = document.getElementById('load-records');
const addBtn = document.getElementById("add-record");
const editBtn = document.getElementById("edit-record");
const formElement = document.querySelector('#form form');

const listUl = document.getElementById('list');

let nameInput = document.getElementById('p-name')
let stepsInput = document.getElementById('steps')
let caloriesInput = document.getElementById('calories')

loadBtn.addEventListener('click', loadRecord);
addBtn.addEventListener('click', addRecord);
editBtn.addEventListener('click', editRecord);

async function loadRecord() {

    // get request
    const response = await fetch(baseUrl);
    const result = await response.json();
    const records = Object.values(result);

    // clear list
    listUl.innerHTML = '';

    // create elements
    records.forEach((record) => {
        const { name, steps, calories, _id } = record;

        // deep clone of all elements in the list
        const clone = baseListRecord.cloneNode(true);

        clone.querySelector('.record p:nth-child(1)').textContent = name;
        clone.querySelector('.record p:nth-child(2)').textContent = steps;
        clone.querySelector('.record p:nth-child(3)').textContent = calories;

        clone.setAttribute('data-recordId', _id);

        listUl.appendChild(clone);

        const deleteBtn = clone.querySelector('.record .delete-btn');
        const changeBtn = clone.querySelector('.record .change-btn');

        deleteBtn.addEventListener('click', async () => {
            await fetch(baseUrl + '/' + _id, {
                method: 'DELETE',
            });

            loadRecord();
        });

        changeBtn.addEventListener('click', () => {

            nameInput.value = name;
            stepsInput.value = steps;
            caloriesInput.value = calories;

            editBtn.removeAttribute('disabled');
            editBtn.setAttribute('enabled', 'enabled');

            addBtn.setAttribute('disabled', 'disabled');
            addBtn.removeAttribute('enabled');

            formElement.setAttribute('data-id', _id);

        });

    });

    editBtn.setAttribute('disabled', 'disabled');
}

async function addRecord() {

    const name = nameInput.value;
    const steps = stepsInput.value;
    const calories = caloriesInput.value;

    clearInputs();

    await fetch(baseUrl, {
        method: 'POST',
        body: JSON.stringify({ name, steps, calories }),
        headers: {
            'Content-Type': 'application/json'
        }
    });

    loadRecord();

}

async function editRecord() {

    const recordId = formElement.getAttribute('data-id');

    const name = nameInput.value;
    const steps = stepsInput.value;
    const calories = caloriesInput.value;

    await fetch(baseUrl + '/' + recordId, {
        method: 'PUT',
        body: JSON.stringify({ name, steps, calories, _id: recordId }),
        headers: {
            'Content-Type': 'application/json'
        }
    });

    loadRecord();

    editBtn.disabled = true;
    addBtn.disabled = false;

    clearInputs();
}

function clearInputs() {
    nameInput.value = '';
    stepsInput.value = '';
    caloriesInput.value = '';
}


